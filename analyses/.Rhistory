geom_boxplot()
anova(C_foliar_lm)
ggplot(data = subset(data, N_foliar < 5), aes(x = Name, y = (N_foliar))) +
geom_boxplot()
ggplot(data = subset(data, N_foliar < 5), aes(x = Name, y = (CN_foliar))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (Ca_foliar))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = log(P_foliar)) +
ggplot(data = data, aes(x = Name, y = log(P_foliar))) +
geom_boxplot()
ggplot
ggplot(data = data, aes(x = Name, y = log(P_foliar))) +
geom_boxplot()
anova(P_foliar_lm)
ggplot(data = data, aes(x = Name, y = log(K_foliar))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (Mg_foliar))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (Al_foliar))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = log(Zn_foliar))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (Ca_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = log(P_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (K_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (Mg_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = log(Al_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = log(Zn_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (pH))) +
geom_boxplot()
anova(pH_lm)
ggplot(data = data, aes(x = Name, y = (CEC))) +
geom_boxplot()
anova(CEC_lm)
ggplot(data = data, aes(x = Name, y = (C_soil))) +
geom_boxplot()
anova(C_soil_lm)
ggplot(data = data, aes(x = Name, y = (N_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = (N_soil))) +
geom_boxplot()
ggplot(data = data, aes(x = Name, y = log(CN_soil))) +
geom_boxplot()
anova(CN_soil_lm)
cld(emmeans(CN_soil_lm, ~Name))
ggplot(data = data, aes(x = Name, y = (retention))) +
geom_boxplot()
cld(emmeans(retention_lm, ~Name))
ggplot(data = data, aes(x = Name, y = (canopy))) +
geom_boxplot()
## convert to rmd
rmarkdown::render("mdi_pitchpine_analyses.R", "pdf_document")
library(tidyverse)
library(emmeans)
## read in cleaned data
data = read.csv('../data/mdi_all_clean.csv')
data$CN_foliar = data$C_foliar/data$N_foliar
data$CN_soil = data$C_soil/data$N_soil
head(data)
### height
height_lm = lm(log(height) ~ Name, data = data)
#plot(resid(height_lm) ~ fitted(height_lm))
anova(height_lm)
cld(emmeans(height_lm, ~Name))
hieght_plot = ggplot(data = data, aes(x = Name, y = log(height))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('Height'))
hieght_plot
hieght_plot = ggplot(data = data, aes(x = Name, y = log(height))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Height)'))
hieght_plot
cld(emmeans(height_lm, ~Name))
height_plot = ggplot(data = data, aes(x = Name, y = log(height))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Height)')) +
jpeg(filename = "plots/plant_plot.jpeg", width = 550, height = 900, units = 'px')
height_plot = ggplot(data = data, aes(x = Name, y = log(height))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Height)')) +
jpeg(filename = "plots/plant_plot.jpeg", width = 800, height = 900, units = 'px')
plot(height_plot)
dev.off()
jpeg(filename = "plots/height_plot.jpeg", width = 600, height = 700, units = 'px')
plot(height_plot)
dev.off()
### canopy
canopy_lm = lm(log(canopy) ~ Name, data = data)
#plot(resid(canopy_lm) ~ fitted(canopy_lm))
anova(canopy_lm)
cld(emmeans(canopy_lm, ~Name))
canopy_plot = ggplot(data = data, aes(x = Name, y = log(canppy))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Canopy)'))
canopy_plot
canopy_plot = ggplot(data = data, aes(x = Name, y = log(canopy))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Canopy)'))
canopy_plot
jpeg(filename = "plots/canopy_plot.jpeg", width = 600, height = 700, units = 'px')
plot(canopy_plot)
dev.off()
### diam
diam_lm = lm(log(diam) ~ Name, data = data)
#plot(resid(diam_lm) ~ fitted(diam_lm))
anova(diam_lm)
### diam
diam_lm = lm(log(diam) ~ Name, data = data)
#plot(resid(diam_lm) ~ fitted(diam_lm))
anova(diam_lm)
cld(emmeans(diam_lm, ~Name))
diam_plot = ggplot(data = data, aes(x = Name, y = log(diam))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Diameter)'))
jpeg(filename = "plots/diam_plot.jpeg", width = 600, height = 700, units = 'px')
plot(diam_plot)
dev.off()
## site means
data_group_by_site = group_by(data, site)
data_site_means = summarise_all(data_group_by_site, .funs = mean(na.rm = T))
## site means
data_group_by_site = group_by(data, site)
head(data)
## site means
data_group_by_site = group_by(data, Name)
data_site_means = summarise_all(data_group_by_site, .funs = mean(na.rm = T))
data_site_means = summarise_all(data_group_by_site, .funs = mean(., na.rm = T))
## site means
data_group_by_Name = group_by(data, Name)
data_Name_means = summarise(data_group_by_Name,
Elevation_mean = mean(Elevation, na.rm = T))
data_Name_means
data_Name_means = summarise(data_group_by_Name,
Elevation_mean = mean(Elevation, na.rm = T),
Slope_mean = mean(Slope, na.rm = T),
Aspect_mean = mean(Aspect, na.rm = T))
data_Name_means
plot(Elevation ~ Slope, data = data)
height_lm_cont = lm(log(height) ~ Elevation + Slope + Aspect, data = data)
anova(height_lm_cont)
summary(height_lm_cont)
height_lmer_cont = lmer(log(height) ~ Elevation + Slope + Aspect + (1|Name), data = data)
library(lme4)
library(car)
height_lmer_cont = lmer(log(height) ~ Elevation + Slope + Aspect + (1|Name), data = data)
Anova(height_lm_cont)
#plot(resid(height_lm) ~ fitted(height_lm))
Anova(height_lm)
Anova(height_lm_cont)
summary(height_lm_cont)
height_lmer_cont = lmer(log(height) ~ Elevation + Slope + Aspect + (1|Name), data = data)
Anova(height_lmer_cont)
summary(height_lmer_cont)
height_lmer_cont = lmer(log(height) ~ Elevation * Slope * Aspect + (1|Name), data = data)
Anova(height_lmer_cont)
summary(height_lmer_cont)
hist(data$Aspect)
emtrends(height_lmer_cont, ~1, var = 'Elevation', at = list(Aspect = 50))
test(emtrends(height_lmer_cont, ~1, var = 'Elevation', at = list(Aspect = 50)))
test(emtrends(height_lmer_cont, ~1, var = 'Elevation', at = list(Aspect = 300)))
test(emtrends(height_lmer_cont, ~1, var = 'Elevation', at = list(Aspect = 10)))
test(emtrends(height_lmer_cont, ~1, var = 'Elevation', at = list(Aspect = 350)))
Anova(height_lmer_cont)
test(emtrends(height_lmer_cont, ~1, var = 'Elevation')
test(emtrends(height_lmer_cont, ~1, var = 'Elevation'))
test(emtrends(height_lmer_cont, ~1, var = 'Elevation'))
test(emtrends(height_lmer_cont, ~1, var = 'Elevation', at = list(Aspect = 50)))
summary(height_lmer_cont)
cld(emmeans(height_lm, ~Name), alpha = 0.1)
cld(emmeans(canopy_lm, ~Name), alpha = 0.1)
cld(emmeans(diam_lm, ~Name), alpha = 0.1)
data$fire[data$Name == 'CAD'] = 'fire'
data$fire[data$Name == 'CADCLIFFS'] = 'no fire'
data$fire[data$Name == 'CADCLIFFS'] = 'fire'
data$fire[data$Name == 'STSAUV'] = 'no fire'
data$fire[data$Name == 'WOND'] = 'no fire'
head(data)
height_lmer_cont = lmer(log(height) ~ Elevation * fire + (1|Name), data = data)
Anova(height_lmer_cont)
test(emtrends(height_lmer_cont, ~1, var = 'Elevation'))
test(emtrends(height_lmer_cont, ~fire, var = 'Elevation'))
canopy_lmer_cont = lmer(log(canopy) ~ Elevation * fire + (1|Name), data = data)
Anova(canopy_lmer_cont)
test(emtrends(canopy_lmer_cont, ~fire, var = 'Elevation'))
cld(emmeans(canopy_lm, ~Name), alpha = 0.1)
canopy_lmer_cont = lmer(log(canopy) ~ Elevation * fire + (1|Name), data = data)
Anova(canopy_lmer_cont)
test(emtrends(canopy_lmer_cont, ~fire, var = 'Elevation'))
diam_lmer_cont = lmer(log(diam) ~ Elevation * fire + (1|Name), data = data)
Anova(diam_lmer_cont)
test(emtrends(diam_lmer_cont, ~fire, var = 'Elevation'))
cld(emmeans(diam_lm, ~Name), alpha = 0.1)
plot(resid(diam_lm) ~ fitted(diam_lm))
### elevation
Elevation_lm = lm(Elevation ~ Name, data = data)
plot(resid(Elevation_lm) ~ fitted(Elevation_lm))
### elevation
Elevation_lm = lm(log(Elevation) ~ Name, data = data)
plot(resid(Elevation_lm) ~ fitted(Elevation_lm))
#plot(resid(Elevation_lm) ~ fitted(Elevation_lm))
Anova(Elevation_lm)
cld(emmeans(Elevation_lm, ~Name), alpha = 0.1)
height_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(height))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point()
height_plot_elevation
height_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(height), col = fire)) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point()
height_plot_elevation
height_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(height), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point()
height_plot_elevation
height_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(height), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point() +
ylab(expression('ln(Height)'))
height_plot_elevation
height_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(height), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point(size = 3) +
ylab(expression('ln(Height)'))
height_plot_elevation
multiplot <- function(..., plotlist=NULL, cols) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# Make the panel
plotCols = cols                          # Number of columns of plots
plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
# Make each plot, in the correct location
for (i in 1:numPlots) {
curRow = ceiling(i/plotCols)
curCol = (i-1) %% plotCols + 1
print(plots[[i]], vp = vplayout(curRow, curCol ))
}
}
jpeg(filename = "plots/height_plot.jpeg", width = 900, height = 900, units = 'px')
multiplot(height_plot, height_plot_elevation, cols = 2)
dev.off()
jpeg(filename = "plots/height_plot.jpeg", width = 1000, height = 800, units = 'px')
multiplot(height_plot, height_plot_elevation, cols = 2)
dev.off()
jpeg(filename = "plots/height_plot.jpeg", width = 1000, height = 600, units = 'px')
multiplot(height_plot, height_plot_elevation, cols = 2)
dev.off()
canopy_plot = ggplot(data = data, aes(x = Name, y = log(canopy))) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Canopy)'))
canopy_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(canopy), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point(size = 3) +
ylab(expression('ln(canopy)'))
jpeg(filename = "plots/canopy_plot.jpeg", width = 1000, canopy = 600, units = 'px')
multiplot(canopy_plot, canopy_plot_elevation, cols = 2)
dev.off()
jpeg(filename = "plots/canopy_plot.jpeg", width = 1000, canopy = 600, units = 'px')
jpeg(filename = "plots/canopy_plot.jpeg", width = 1000, height = 600, units = 'px')
multiplot(canopy_plot, canopy_plot_elevation, cols = 2)
dev.off()
canopy_plot = ggplot(data = data, aes(x = Name, y = log(canopy), col = fire)) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Canopy)'))
canopy_plot
canopy_plot
canopy_plot
canopy_plot = ggplot(data = data, aes(x = Name, y = log(canopy), col = fire)) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Canopy)'))
canopy_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(canopy), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point(size = 3) +
ylab(expression('ln(canopy)'))
jpeg(filename = "plots/canopy_plot.jpeg", width = 1000, height = 600, units = 'px')
multiplot(canopy_plot, canopy_plot_elevation, cols = 2)
dev.off()
height_plot = ggplot(data = data, aes(x = Name, y = log(height), col = fire)) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Height)'))
height_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(height), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point(size = 6) +
ylab(expression('ln(Height)'))
jpeg(filename = "plots/height_plot.jpeg", width = 1000, height = 600, units = 'px')
multiplot(height_plot, height_plot_elevation, cols = 2)
dev.off()
canopy_plot = ggplot(data = data, aes(x = Name, y = log(canopy), col = fire)) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Canopy)'))
canopy_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(canopy), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point(size = 6) +
ylab(expression('ln(canopy)'))
jpeg(filename = "plots/canopy_plot.jpeg", width = 1000, height = 600, units = 'px')
multiplot(canopy_plot, canopy_plot_elevation, cols = 2)
dev.off()
Anova(canopy_lmer_cont)
diam_plot = ggplot(data = data, aes(x = Name, y = log(diam), col = fire)) +
theme(legend.position = "none",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_boxplot(outlier.color = NA, fill = 'white') +
geom_dotplot(binaxis = 'y', binwidth = 0.07, stackdir = 'center', alpha = 0.5) +
# scale_x_discrete(labels = c('Ambient', 'Added N')) +
xlab('Site') +
ylab(expression('ln(Diameter)'))
diam_plot_elevation = ggplot(data = data, aes(x = Elevation, y = log(diam), col = fire)) +
theme(legend.position = "right",
axis.title.y=element_text(size=rel(2.5), colour = 'black'),
axis.title.x=element_text(size=rel(2.5), colour = 'black'),
axis.text.x=element_text(size=rel(2), colour = 'black'),
axis.text.y=element_text(size=rel(2), colour = 'black'),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid.major = element_line(colour = "grey")) +
geom_point(size = 6) +
ylab(expression('ln(Diameter)'))
jpeg(filename = "plots/diam_plot.jpeg", width = 1000, height = 600, units = 'px')
multiplot(diam_plot, diam_plot_elevation, cols = 2)
dev.off()
Anova(diam_lmer_cont)
